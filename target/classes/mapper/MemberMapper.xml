<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.mkw.a.mapper.MemberDao">

<!-- 회원가입 -->
<insert id="regiAf" parameterType="com.mkw.a.domain.MemberVo">
	/*MemberMapper.regiAf*/
	insert into HOME_MEMBER 
	(
	HOMESEQ, 
	NAME, 
	CLASSIFY, 
	EMAIL, 
	PHONE, 
	PWD, 
	ISSALE, 
	MYID, 
	AUTH, 
	FILENAME, 
	NEWFILENAME
	)
	VALUES(
	HOME_SEQ.NEXTVAL, 
	#{name}, 
	#{classify}, 
	#{email}, 
	#{phone}, 
	#{pwd}, 
	0, 
	#{myid}, 
	9, 
	#{filename}, 
	#{newfilename}
	)
	
</insert>

<!-- 아이디중복확인 -->
<select id="getId" parameterType="com.mkw.a.domain.MemberVo" resultType="java.lang.Integer">
	/*MemberMapper.getId*/
	SELECT NVL(COUNT(*), 0)
	FROM HOME_MEMBER
	WHERE MYID=#{myid}
</select>

<!-- 로그인 -->
<select id="login" parameterType="com.mkw.a.domain.MemberVo"
	resultType="com.mkw.a.domain.MemberVo">
	/*MemberMapper.login*/
	SELECT 
		NAME, 
		CLASSIFY, 
		EMAIL, 
		PHONE, 
		ISSALE, 
		MYID, 
		AUTH, 
		NEWFILENAME, 
		FILENAME
	FROM HOME_MEMBER
	WHERE MYID=#{myid} AND PWD=#{pwd}
</select>

<!-- 회원탈퇴 -->
<delete id="memberDelete" parameterType="com.mkw.a.domain.MemberVo">
	/*MemberMapper.memberDelete*/
	DELETE FROM HOME_MEMBER
	WHERE MYID=#{myid} 
		AND PWD = #{pwd}
</delete>

<!-- 회원정보 수정 -->
<update id="updateMember" parameterType="com.mkw.a.domain.MemberVo">
/*MemberMapper.updateMember*/
UPDATE HOME_MEMBER
<set>
	<if test="name != null and name != ''">
		NAME = #{name, jdbcType=VARCHAR},
	</if>
	<if test="classify != null and classify != ''">
		CLASSIFY = #{classify, jdbcType=VARCHAR},
	</if>
	<if test="email != null and email != ''">
		EMAIL = #{email, jdbcType=VARCHAR},
	</if>
	<if test="pwd != null and pwd != ''">
		PWD = #{pwd, jdbcType=VARCHAR},
	</if>
	<if test="myid != null and myid != ''">
		MYID = #{myid, jdbcType=VARCHAR},
	</if>
	<if test="phone != null and phone != ''">
		PHONE = #{phone, jdbcType=VARCHAR},
	</if>
	<if test="issale != null and issale != ''">
		ISSALE = #{issale, jdbcType=VARCHAR},
	</if>
	<if test="auth != null and auth != ''">
		AUTH = #{auth, jdbcType=VARCHAR},
	</if>
	<if test="filename != null and filename != ''">
		FILENAME = #{filename, jdbcType=VARCHAR},
		NEWFILENAME = #{newfilename, jdbcType=VARCHAR},
	</if>
	<if test='del != null and del != ""'>
		del = #{del}
	</if>
</set>
WHERE MYID=#{myid}
</update>

<!-- 일반회원수 -->
<select id="getnomalLen" resultType="java.lang.Integer">
	/*MemberMapper.getnomalLen*/
	SELECT COUNT(*)
	FROM HOME_MEMBER
	WHERE ISSALE = 0 
	AND AUTH = 1
</select>

<!-- 할인회원수 -->
<select id="getdiscountLen" resultType="java.lang.Integer">
	/*MemberMapper.getdiscountLen*/
	SELECT COUNT(*)
	FROM HOME_MEMBER
	WHERE ISSALE = 1
	AND AUTH = 1
</select>

<!-- 할인회원 및 일반회원수 가져오기 -->
<select id="getDiscountNomalLen" resultType="hashmap">
/*getDiscountNomalLen*/
	WITH A AS (
	SELECT 
		COUNT(*) AS SALECNT
		FROM HOME_MEMBER
		WHERE ISSALE = 1
		AND AUTH = 1)
	,B AS(
	SELECT 
		COUNT(*) AS NOMALCNT
		FROM HOME_MEMBER
		WHERE ISSALE = 0 
		AND AUTH = 1)
	SELECT A.SALECNT, B.NOMALCNT FROM A, B;
</select>

<!-- 모든 회원의 정보 가지고 오기 -->
<select id="getMemberList" resultType="com.mkw.a.domain.MemberVo">
	/*MemberMapper.getMemberList*/
	SELECT * 
	FROM HOME_MEMBER
</select>

<select id="getAllMemberData" resultType="hashmap">
	/*MemberMapper.getAllMemberData*/
	SELECT 
		  NAME
		, CLASSIFY
		, EMAIL
		, PHONE
		, ISSALE
		, MYID
		, AUTH
		, del
	FROM HOME_MEMBER
</select>

</mapper>