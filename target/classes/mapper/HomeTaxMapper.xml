<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.mkw.a.mapper.HomeTaxDao">

<!-- 월세 입력 -->
<!-- 밑에 셀렉문 수정해야함!!!!!!!!!!! -->
<insert id="createTax">
	/*HomeTaxMapper.createTax*/
	INSERT ALL
	INTO HOMETAX (
		SEQ, 
		MYID, 
		DAY, 
		WATER, 
		ELEC, 
		GAS, 
		INTER, 
		MANAGERFEE, 
		MONTHFEE, 
		TOTALFEE, 
		RESTFEE, 
		INPUTFEE, 
		DEL 
		<if test='htcustome != null and htcustome != ""'>
			,HTCUSTOME
		</if>
		)
	VALUES(
		SEQ_HOMETAX.NEXTVAL, 
		#{myid}, 
		#{day}, 
		#{water}, 
		#{elec}, 
		#{gas}, 
		#{inter}, 
		#{managerfee}, 
		#{monthfee}, 
		#{totalfee}, 
		#{restfee}, 
		0, 
		0
		<if test='htcustome != null and htcustome != ""'>
			,#{htcustome, jdbcType=VARCHAR}
		</if>
		)
		
	INTO HOMETAX_MASTER (
		SEQ, 
		MYID, 
		DAY, 
		WATER, 
		ELEC, 
		GAS, 
		INTER, 
		MANAGERFEE, 
		MONTHFEE, 
		TOTALFEE, 
		RESTFEE, 
		INPUTFEE, 
		DEL 
		<if test='htcustome != null and htcustome != ""'>
			,HTCUSTOME
		</if>
		)
	VALUES(
		SEQ_HOMETAX.NEXTVAL, 
		#{myid}, 
		#{day}, 
		#{water}, 
		#{elec}, 
		#{gas}, 
		#{inter}, 
		#{managerfee}, 
		#{monthfee}, 
		#{totalfee}, 
		#{restfee}, 
		0, 
		0
		<if test='htcustome != null and htcustome != ""'>
			,#{htcustome, jdbcType=VARCHAR}
		</if>
	)

	 
	select * from
	DUAL
</insert>

<!-- 모든 월세 리스트 가지고 오기 : 메인페이지용 -->
<select id="getAllTaxList" parameterType="String" resultType="com.mkw.a.domain.HomeTaxVo">
	/*HomeTaxMapper.getAllTaxList*/
	SELECT 
		H.DAY, 
		H.TOTALFEE, 
		H.RESTFEE, 
		H.INPUTFEE , 
		M.NAME
	FROM HOMETAX H , HOME_MEMBER M 
	WHERE H.MYID = M.MYID 
		AND H.DAY= #{day}
</select>

<!-- 개인 월세 상세 내역 보기 -->
<select id="detailTax" parameterType="com.mkw.a.domain.HomeTaxVo" resultType="com.mkw.a.domain.HomeTaxVo">
	/*HomeTaxMapper.detailTax*/
	SELECT 
	H.MYID, 
	H.DAY, 
	H.WATER, 
	H.ELEC, 
	H.GAS, 
	H.INTER, 
	H.MANAGERFEE, 
	H.MONTHFEE, 
	H.TOTALFEE, 
	H.RESTFEE, 
	H.INPUTFEE, 
	H.DEL,  
	M.NAME, 
	R.RESTFEE AS RESTFEEMASTER, 
	R.INPUTFEE AS INPUTFEEMASTER
	FROM HOMETAX H , HOME_MEMBER M , HOMETAX_MASTER R
	WHERE H.MYID = M.MYID 
	     AND H.SEQ = R.SEQ
		<choose>
			<when test='myid == "admin" and myid != null and myid != ""'>
				AND H.MYID in (select myid from home_member where auth = '1')
			</when>
			<otherwise>
				AND H.MYID = #{myid}
			</otherwise>
		</choose>
		<!-- <choose>
			<when test='(auth == 1 and auth != null and auth != "") 
						or (auth == 3 and auth != null and auth != "")'>
				AND EXISTS (SELECT 1 FROM HOME_MEMBER M WHERE M.AUTH = '1')
			</when>
			<otherwise>
				AND NOT EXISTS (SELECT 1 FROM HOME_MEMBER M WHERE M.AUTH = '1')
			</otherwise>
		</choose> -->
		AND H.DAY = #{day}
</select>

<!-- 월세 납부 : 업데이트 -->
<!-- 21.09.24 관리자가 대신 납부 처리해줄경우 위하여 조건 추가 @author K -->
<insert id="inputTax" parameterType="com.mkw.a.domain.HomeTaxVo">
/*HomeTaxMapper.inputTax*/ 
UPDATE HOMETAX 
<set>

INPUTFEE = INPUTFEE + #{inputfee}, 
RESTFEE = case 
               when (  RESTFEE - #{inputfee} )>=0 then RESTFEE - #{inputfee}
      <![CDATA[when (  RESTFEE - #{inputfee} )<0 then 0	]]>
             end,
OVERFEE = case 
            when (  #{inputfee} - RESTFEE )>=0 then (#{inputfee} - RESTFEE)
      <![CDATA[when (  #{inputfee} - RESTFEE )<0 then 0 ]]>
          end

<choose>
	<when test='myid == "admin" and myid != "" and myid != null'>
		WHERE DAY = #{day} AND MYID = (SELECT MYID FROM HOME_MEMBER WHERE NAME = #{name})
	</when>
	<otherwise>
		WHERE DAY = #{day} AND MYID = #{myid}
	</otherwise>
</choose>
</set>

<selectKey keyProperty="seq,overfee" resultType="com.mkw.a.domain.HomeTaxVo" order="AFTER">
	select SEQ, OVERFEE 
	FROM HOMETAX
	<!-- 아이디가 admin일 경우 --> 
	<choose>
		<when test='myid == "admin" and myid != "" and myid != null'>
			WHERE DAY = #{day} AND MYID = (SELECT MYID FROM HOME_MEMBER WHERE NAME = #{name})
		</when>
		<otherwise>
			WHERE DAY = #{day} AND MYID = #{myid}
		</otherwise>
	</choose> 
</selectKey>
</insert>

<select id="getTotalData" parameterType="String" resultType="com.mkw.a.domain.HomeTaxVo">
/*HomeTaxMapper.getTotalData*/
SELECT 
	SUM(WATER) as WATER, 
	SUM(ELEC) as ELEC, 
	SUM(GAS) as GAS, 
	SUM(INTER) as INTER, 
	SUM(MANAGERFEE) as MANAGERFEE, 
	SUM(MONTHFEE) as MONTHFEE, 
	SUM(TOTALFEE) as TOTALFEE, 
	'0' as DEL, 
	'총합' as myid, 
	'0' as RESTFEE, 
	'0' as INPUTFEE, 
	day, 
	'총합' as name
FROM HOMETAX 
GROUP BY DAY
HAVING DAY = #{day}
</select>

<!-- 납부내역확인 -->
<select id="chkTax" parameterType="com.mkw.a.domain.HomeTaxVo" resultType="com.mkw.a.domain.HomeTaxVo">
	/*HomeTaxMapper.chkTax*/
	SELECT 
		M.NAME, 
		H.DAY, 
		H.TOTALFEE, 
		H.RESTFEE, 
		H.INPUTFEE, 
		H.DEL
	FROM HOMETAX H , HOME_MEMBER M 
	WHERE H.MYID = M.MYID
	<choose>
		<when test='myid == "admin" and myid != null and myid != ""'>
			AND M.MYID IN (select myid from HOME_MEMBER where auth = 1)	
		</when>
		<otherwise>
			AND M.MYID = #{myid}
		</otherwise>
	</choose>
    
    AND H.INPUTFEE > 0
    ORDER BY H.DAY ASC
</select>

<!-- 납부내역 테이블 인서트 -->
<insert id="insertTableInput">
	/*HomeTaxMapper.insertTableInput*/
	INSERT INTO HOMETAX_INSERT 
	(
	TAXSEQ,
	MYID,	
	HTCUSTOMER1,
	INPUTFEE,
	DAY, 
	DEL_YN, 
	CONFIRM_YN
	)
	VALUES(
	#{seq},
	<choose>
		<when test='myid=="admin" and myid != null and myid != ""'>
			(SELECT MYID FROM HOME_MEMBER WHERE NAME = #{name}),
			'관리자대행납부',
		</when>
		<otherwise>
			#{myid}, 
			'',
		</otherwise>
	</choose>
	#{inputfee}, 
	#{day}, 
	'N', 
	'N'
	)
</insert>

<select id="getMonthInputListData" parameterType="hashmap" resultType="hashmap">
/*getMonthInputListData*/
	select * 
    from HOMETAX_INSERT 
    where myid = (select myid from HOME_MEMBER where name = #{name}) 
    and day = #{day}
</select>

<select id="getNoConfirmData" resultType="com.mkw.a.domain.HomeTaxVo">
/*getNoConfirmData*/
select  TAXSEQ AS seq,	
		MYID,
		INPUTFEE,
		INSERTDAY,
		DAY,
		HTCUSTOMER1,
		DEL_YN,
		CONFIRM_YN
from hometax_insert
where confirm_yn = 'N'
AND DEL_YN = 'N'
ORDER BY DAY ASC, SEQ ASC
</select>

<update id="confirmTaxAf" parameterType="hashmap">
/*HomeTaxMapper.confirmTaxAf*/ 
update HOMETAX_INSERT 
<set>
confirm_yn = 'Y'
</set>
where TAXSEQ = #{taxseq}
and INSERTDAY = #{insertday}
and myid = #{myid}
and day = #{day}
and confirm_yn = 'N'
</update>

<update id="recallTaxAf" parameterType="hashmap">
/*HomeTaxMapper.recallTaxAf*/ 
update HOMETAX_INSERT 
set del_yn = 'Y'
where TAXSEQ = #{taxseq}
and INSERTDAY = #{insertday}
and myid = #{myid}
and day = #{day}
and confirm_yn = 'N'
</update>

<update id="recallTaxAf_step2_updateTempTax" parameterType="hashmap">
UPDATE HOMETAX
SET INPUTFEE = INPUTFEE - #{inputfee}, 
    RESTFEE = RESTFEE + #{inputfee}
WHERE SEQ = #{taxseq}
AND DAY = #{day}
AND MYID = #{myid}
</update>

<insert id="inputTaxMaster" parameterType="com.mkw.a.domain.HomeTaxVo">
/*HomeTaxMapper.inputTaxMaster*/ 
UPDATE HOMETAX_MASTER 
<set>
INPUTFEE = INPUTFEE + #{inputfee}, 
RESTFEE = case 
               when (  RESTFEE - #{inputfee} )>=0 then RESTFEE - #{inputfee}
      <![CDATA[when (  RESTFEE - #{inputfee} )<0 then 0	]]>
             end,
OVERFEE = case 
            when (  #{inputfee} - RESTFEE )>=0 then (#{inputfee} - RESTFEE)
      <![CDATA[when (  #{inputfee} - RESTFEE )<0 then 0 ]]>
          end

<choose>
	<when test='myid == "admin" and myid != "" and myid != null'>
		WHERE DAY = #{day} AND MYID = (SELECT MYID FROM HOME_MEMBER WHERE NAME = #{name})
	</when>
	<otherwise>
		WHERE DAY = #{day} AND MYID = #{myid}
	</otherwise>
</choose>
</set>
</insert>

<!-- 월세 및 공과금 주인 및 공공기관에 납부했는지를 체크해주는 테이블 데이터 생성 2109 2101 -->
<insert id="create_hometax_payment_chk" parameterType="String">
/*HomeTaxMapper.create_hometax_payment_chk*/
INSERT INTO HOMETAX_PAYMENT_CHK
	(
	BDAY, 
	BWATER, 
	BELEC, 
	BGAS, 
	BINTER,
	BMANAGERFEE,
	BMONTHFEE, 
	BTOTAL, 
	DEL, 
	HTCUSTOME1
	)
VALUES(
	#{day}, 
	'N',
	'N',
	'N',
	'N',
	'N',
	'N',
	'N',
	'N',
	''
	)
</insert>

<update id="payment_chk_update" parameterType="hashmap">
/*payment_chk_update*/
update HOMETAX_PAYMENT_CHK
<set>
	<if test = 'BWATER != null and BWATER != ""'>
		BWATER = #{BWATER}
	</if>
	<if test = 'BELEC != null and BELEC != ""'>
		BELEC = #{BELEC}
	</if>
	<if test = 'BGAS != null and BGAS != ""'>
		BGAS = #{BGAS}
	</if>
	<if test = 'BINTER != null and BINTER != ""'>
		BINTER = #{BINTER}
	</if>
	<if test = 'BMANAGERFEE != null and BMANAGERFEE != ""'>
		BMANAGERFEE = #{BMANAGERFEE}
	</if>
	<if test = 'BMONTHFEE != null and BMONTHFEE != ""'>
		BMONTHFEE = #{BMONTHFEE}
	</if>
</set>
where bday = #{bday}
</update>

<select id="getDuesStatus" parameterType="hashmap" resultType="hashmap">
/*getDuesStatus*/
select * 
from HOMETAX_PAYMENT_CHK 
where bday = #{bday}
</select>

<!-- 그래프그리기 위한 용도 데이터 -->
<select id="getMonthTaxListData" resultType="hashmap">
/*getMonthTaxListData*/
SELECT DAY
	, SUM(WATER) AS WATER
	, SUM(ELEC) AS ELEC
	, SUM(GAS) AS GAS
	, SUM(INTER) AS INTER
	, SUM(MANAGERFEE) AS MANAGERFEE
	, SUM(MONTHFEE) AS MONTHFEE
	, SUM(TOTALFEE) AS TOTALFEE
FROM HOMETAX_MASTER
GROUP BY DAY
ORDER BY DAY ASC
</select>

<select id="getTaxByYearMonth" parameterType="String" resultType="hashmap">
select 
	master.SEQ
	, master.MYID
	, master.DAY
	, master.WATER
	, master.ELEC
	, master.GAS
	, master.INTER
	, master.MANAGERFEE
	, master.MONTHFEE
	, master.TOTALFEE
	, master.RESTFEE
	, master.INPUTFEE
	, master.DEL
	, master.OVERFEE
	, master.HTCUSTOME
	, (select name from HOME_MEMBER where myid = master.myid) as NAME
	, (select phone from HOME_MEMBER where myid = master.myid) as PHONE
from HOMETAX_MASTER master
where day = #{formatDate, jdbcType=VARCHAR}
</select>

<select id="getDiscountPolicyPrice" resultType="Integer"> 
select codevalue 
from HOMETAX_COMMON_CODE 
where codeid='TAX_DISCOUNT_POLICY'
</select>

</mapper>